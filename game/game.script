local monarch = require "monarch.monarch"
local sounds = require "game.sounds"
local champs = require "game.champs"
local sequence = require "ludobits.m.sequence"
local directions = require "game.directions"
local messages = require "game.messages"

local RING_CORNERS = {
	{ x = -60, y = -40 },
	{ x = 60, y = -40 },
	{ x = -60, y = 50 },
	{ x = 60, y = 50 },
}

local RING_SYMBOLS = { "star", "skull", "transparent1px" }
local RING_MATS = { "ring_blue", "ring_grey", "ring_purple", "ring_brown", "ring_green" }

local function create_champ(player)
	local corner = RING_CORNERS[player.index]
	local data = champs.get(player.champ)
	local pos = vmath.vector3(corner.x, corner.y, 0)
	local props = {
		controls = player.controls,
		gamepad = player.gamepad,
		index = player.index,
		champ = player.champ,
		team = player.team,
		initial_max_speed = data.speed,
		initial_stamina = data.stamina,
	}
	return factory.create("#champfactory", pos, nil, props)
end



local function start_game_loop(self, champ_count, team_count)
	sequence.run_once(function()
		
		
		msg.post("/hud", "start_game", { champs = champ_count, teams = team_count })

		timer.delay(0, false, function()
			sounds.bell()
		end)

		while not self.game_over do
			sequence.delay(math.random(10, 60))
			if not self.game_over then
				local dir = directions.random()
				local pos = vmath.vector3(dir.x * -200, dir.y * -190, 0)
				if dir.x ~= 0 then
					pos.y = pos.y + math.random(-50, 50)
				elseif dir.y ~= 0 then
					pos.x = pos.x + math.random(-50, 50)
				end
				factory.create("#spectatorfactory", pos, nil, { direction = dir })
			end
		end

		
	end)

end


local function game_over(self, winner)
	sequence.run_once(function()
		self.game_over = true
		local name = self.champs[winner].name
		msg.post("/referee", messages.SAY, { text = ("AND THE WINNER IS %s"):format(name) })
		sequence.delay(5)
		msg.post(".", "acquire_input_focus")
		msg.post("/referee", messages.SAY, { text = "PRESS ANY KEY TO CONTINUE" })
	end)
end

function init(self)
	local c = 0.3
	msg.post("@render:", "clear_color", { color = vmath.vector4(c,c,c,1) })
	--msg.post("@render:", "clear_color", { color = vmath.vector4(0.3, 0.3, 0.3, 1.0) })
	
	sprite.play_flipbook("mat_symbol#symbol", RING_SYMBOLS[math.random(1, #RING_SYMBOLS)])
	sprite.play_flipbook("mat#sprite", RING_MATS[math.random(1, #RING_MATS)])

	local players = monarch.data("game")
	self.champs = {}
	local teams = {}
	local team_count = 0
	local champ_count = 0
	for i,player in ipairs(players) do
		local id = create_champ(player)
		self.champs[id] = champs.get(player.champ)
		if not teams[player.team] then
			teams[player.team] = true
			team_count = team_count + 1
		end
		champ_count = champ_count + 1
	end
		
	start_game_loop(self, champ_count, team_count)
end


function on_input(self, action_id, action)
	if action.pressed and self.game_over then
		monarch.back()
		monarch.show("pregame")
	end
end

function on_message(self, message_id, message, sender)
	if message_id == messages.GAME_OVER then
		print("game over")
		game_over(self, message.winner)
	end
end