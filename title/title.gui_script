local monarch = require "monarch.monarch"
local transitions = require "monarch.transitions.gui"
local sequence = require "ludobits.m.sequence"
local champs = require "game.champs"


function init(self)
	msg.post(".", "acquire_input_focus")
	gui.set_render_order(15)	
	self.transition = transitions.create()
		.show_in(gui.get_node("logo"), transitions.slide_in_top, gui.EASING_OUTBACK, 0.5, 0)
		.show_in(gui.get_node("pressanykey"), transitions.fade_in, gui.EASING_INOUTQUAD, 0.5, 0)
		.show_in(gui.get_node("8bit"), transitions.fade_in, gui.EASING_INOUTQUAD, 0.5, 0)
		.show_in(gui.get_node("copyright"), transitions.fade_in, gui.EASING_INOUTQUAD, 0.5, 0)
		.show_out(gui.get_node("logo"), transitions.slide_out_top, gui.EASING_INBACK, 0.5, 0)
		.show_out(gui.get_node("pressanykey"), transitions.fade_out, gui.EASING_INOUTQUAD, 0.5, 0)
		.show_out(gui.get_node("8bit"), transitions.fade_out, gui.EASING_INOUTQUAD, 0.5, 0)
		.show_out(gui.get_node("copyright"), transitions.fade_out, gui.EASING_INOUTQUAD, 0.5, 0)
		.back_in(gui.get_node("logo"), transitions.slide_in_top, gui.EASING_OUTBACK, 0.5, 0)
		.back_in(gui.get_node("pressanykey"), transitions.fade_in, gui.EASING_INOUTQUAD, 0.5, 0)
		.back_in(gui.get_node("8bit"), transitions.fade_in, gui.EASING_INOUTQUAD, 0.5, 0)
		.back_in(gui.get_node("copyright"), transitions.fade_in, gui.EASING_INOUTQUAD, 0.5, 0)
		.back_out(gui.get_node("logo"), transitions.slide_out_top, gui.EASING_INBACK, 0.5, 0)
		.back_out(gui.get_node("pressanykey"), transitions.fade_out, gui.EASING_INOUTQUAD, 0.5, 0)
		.back_out(gui.get_node("8bit"), transitions.fade_out, gui.EASING_INOUTQUAD, 0.5, 0)
		.back_out(gui.get_node("copyright"), transitions.fade_out, gui.EASING_INOUTQUAD, 0.5, 0)
				

	local duration = 10
	for i=1,4 do
		sequence.run_loop(function()
			local champ_node = gui.get_node("champ" .. i)
			local champ = champs.random()
			--sequence.delay(i * 0.1)
			gui.play_flipbook(champ_node, champ.walk)
			gui.set_position(champ_node, vmath.vector3(1000 + i * 60, 170, 0))
			sequence.gui_animate(champ_node, gui.PROP_POSITION, vmath.vector3(200 + i * 80, 170, 0), gui.EASING_INOUTQUART, duration, 0)
			gui.play_flipbook(champ_node, champ.taunt)
			sequence.delay(1)
			gui.play_flipbook(champ_node, champ.idle)
			sequence.delay(1)
			gui.play_flipbook(champ_node, champ.taunt)
			sequence.delay(1)
			gui.play_flipbook(champ_node, champ.walk)
			sequence.gui_animate(champ_node, gui.PROP_POSITION, vmath.vector3(-440 + i * 60, 170, 0), gui.EASING_INOUTQUART, duration, 0)
		end)
	end
end

function on_message(self, message_id, message, sender)
	print(message_id)
	self.transition.handle(message_id, message, sender)
end

function on_input(self, action_id, action)
	if action.released and not self.pregame then
		self.pregame = true
		monarch.show("pregame")
	end
end